{"version":3,"sources":["webpack:///./src/plugins/tooltip/Tooltip.vue","webpack:///./src/plugins/tooltip/Tooltip.vue?baa6"],"names":["tooltip","ref","tippyInstance","initTippy","destroy","tippy","value","parentNode","inject","content","props","text","options","onMounted","onUpdated","onUnmounted","__exports__"],"mappings":"mRAsBQA,EAAUC,mBAChB,IAAIC,EAEJ,SAASC,IACHD,GACFA,EAAcE,UAGhBF,EAAgBG,eAAML,EAAQM,MAAMC,WAAY,IAC3CC,oBAAO,kBACVC,QAASC,EAAMC,QACZD,EAAME,U,OAIbC,uBAAUV,GACVW,uBAAUX,GACVY,yBAAY,KACVb,EAAcE,Y,gICrClB,MAAMY,EAAc,EAEL,gB","file":"js/chunk-21255a71.73a8614e.js","sourcesContent":["<template>\r\n  <span ref=\"tooltip\" class=\"tooltip\" />\r\n</template>\r\n\r\n<script setup>\r\n  import tippy from 'tippy.js';\r\n  import 'tippy.js/dist/tippy.css';\r\n  import { ref, inject, defineProps, onMounted, onUpdated, onUnmounted } from 'vue';\r\n\r\n  const props = defineProps({\r\n    text: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    options: {\r\n      type: Object,\r\n      default: () => {\r\n        return {};\r\n      }\r\n    }\r\n  });\r\n\r\n  const tooltip = ref();\r\n  let tippyInstance;\r\n\r\n  function initTippy() {\r\n    if (tippyInstance) {\r\n      tippyInstance.destroy();\r\n    }\r\n\r\n    tippyInstance = tippy(tooltip.value.parentNode, {\r\n      ...inject('tooltipOptions'),\r\n      content: props.text,\r\n      ...props.options\r\n    });\r\n  }\r\n\r\n  onMounted(initTippy);\r\n  onUpdated(initTippy);\r\n  onUnmounted(() => {\r\n    tippyInstance.destroy();\r\n  });\r\n</script>\r\n","import script from \"./Tooltip.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Tooltip.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"sourceRoot":""}